#配置rootLogger 需要几个输出 优先级ALL < DEBUG < INFO <WARN < ERROR < FATAL < OFF
log4j.rootLogger=debug,appender1,appender2,logFile

#配置第一个appender 目的地，输出到哪里 ConsoleAppender控制台
log4j.appender.appender1=org.apache.log4j.ConsoleAppender
#指定该appender输出所有DEBUG以上的日志
log4j.appender.appender1.Threshold=DEBUG
#选择比较方便的的日志输出格式-包含日志产生的时间、线程、类别等等信息
log4j.appender.appender1.layout=org.apache.log4j.TTCCLayout

#配置第二个appender
log4j.appender.appender2=org.apache.log4j.ConsoleAppender
#指定该appender输出所有WARN以上的日志
log4j.appender.appender2.Threshold=WARN
#指定该appender通过控制台的err输出日志
log4j.appender.appender2.Target=System.err
#配置该appender的输出格式
log4j.appender.appender2.layout = org.apache.log4j.PatternLayout
#其中 %d表示日志时间点的日期或时间，默认格式为 ISO8601，也可以在其后指定格，
#    %l表示输出日志事件的发生位置，包括类目名、发生的线程，以及行数。
#    %-5p 输出日志信息优先级,占5个字符
#    %m 输出代码中指定的消息,产生的日志具体信息
#    %n 输出一个回车换行符
log4j.appender.appender2.layout.ConversionPattern =%d %l %-5p %m %n
log4j.appender.appender2.ImmediateFlush = true

#配置文件输出appender，FileAppender文件
log4j.appender.logFile = org.apache.log4j.FileAppender
#配置文件输出样式
log4j.appender.logFile.layout = org.apache.log4j.PatternLayout
log4j.appender.logFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n
#指定仅记录ERROR以上级别的日志
log4j.appender.logFile.Threshold = debug
log4j.appender.logFile.ImmediateFlush = TRUE
#指定将日志累加到日志文件末尾
log4j.appender.logFile.Append = TRUE
#指定日志文件
log4j.appender.logFile.File = ./Log4J/log/log4j.log
log4j.appender.logFile.Encoding = UTF-8
